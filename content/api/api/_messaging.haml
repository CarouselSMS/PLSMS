---
filter:
  - textile
updated: 11 May 2009
version: 6
---

h1. Send Message (send_message)

If an application needs to send a message to a certain phone number, it uses this call. The message can be of arbitrary size. If it doesn't fit into the standard message size (160 characters), the message will be broken into several parts automatically, like this:

* (1/3) The beginning ...
* (2/3) ... continuation ...
* (3/3) ... the ending.

Scheduled messages are sent in batches every 15 minutes. The format of the date ("on" field) may vary from very strict &ldquo;10/12/2008 12:55AM -0500&rdquo; to the relaxed &ldquo;Tuesday 9 1:15PM&rdquo;. If the timezone isn&rsquo;t specified, the EST (GMT-5) is assumed.

*Split Modes:*

When message breaking is necessary, it can be performed in one of three predefined ways. The way can be chosen on per-application basis and is set in the Application preferences on the Service Layer side.

* Character Boundary - the message will be split in part without looking for gaps between the words and the ends of sentences. It's the most compact way of breaking the messages that ensures the minimal number of parts being sent.

* Word Boundary - the message text is analyzed for the gaps between the words and split so that no word is broken unless the message becomes severely under-filled (more than a half of the message is empty). In this case the Character Boundary mode is used to fill the rest of the part and the operation switches back to normal Word Boundary operation for the next part.

* Sentence Boundary - the message is broken into parts preferably on the sentence edges which are (commas, exclamation and question marks, and line breaks). Again if the message appears to be under-filled, the mode is switched to the Word Boundary and if even this doesn't help, it is lowered to the Character Boundary.

Parameters:

* api_key         - (String) API key of the application
* phone_number    - (String) target phone number (10 digits with or without country code)
* body            - (String) message text
* action_expected - (Boolean, Optional) send TRUE if the response from the target phone is expected. In this case, the session between the phone and the Application is established for seamless directing of the response MO's to the application without the need of sending the Keyword to select the Application first.
* on              - (String, Optional) time when the message is to be sent

Responses:

* HTTP Code 500 and error message in the body
* HTTP Code 200
** Comma-separated list of scheduled message IDs is returned with the "message_ids" key. This is useful for matching sent messages with delivery reports and message cancellation.



h1. Cancel Messages (cancel_messages)

This call cancels messages scheduled for future delivery with the send_message call with parameter "on". The send_message call returned the list of IDs corresponding to all scheduled messages or parts of the bigger message that didn't fit into a single text message. You can use these IDs to cancel future messages at any moment.

Please note that this call can cancel only non-subscription messages. To cancel subscription-level messages, use "cancel_subscription_messages" call.

Parameters:

* message_ids - (String) comma-separated list of scheduled message IDs

Responses:

* HTTP Code 500 and error message in the body
* HTTP Code 200
** canceled_count - (Integer) the number of canceled messages



h1. Delivery status (delivery_status)

This call accepts a single sent message ID or the list of IDs separated by commas and returns the status for each of the messages. If the message wasn't found, it's not mentioned in the results. The statuses have numeric values and are as follows:

* *0* - Pending delivery
* *1* - Delivered to the user phone
* *2* - Not delivered to the user phone (failed)

Parameters:

* message_ids - (String) comma-separated list of message IDs (either scheduled or not) returned from the send_message call

Responses:

* The JSON-formatted map of found message IDs to their statuses
